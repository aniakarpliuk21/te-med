"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/services/message.service.ts":
/*!*****************************************!*\
  !*** ./src/services/message.service.ts ***!
  \*****************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   messageService: () => (/* binding */ messageService)\n/* harmony export */ });\n/* harmony import */ var _urls_urls__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/urls/urls */ \"(app-pages-browser)/./src/urls/urls.ts\");\n\nconst messageService = {\n    async sendMessage (chatId, message) {\n        const token = localStorage.getItem(\"access_token\");\n        const userId = localStorage.getItem(\"userId\");\n        if (!token) throw new Error(\"Missing access token\");\n        if (!userId) throw new Error(\"Відсутній userId\");\n        try {\n            const response = await fetch(\"\".concat(_urls_urls__WEBPACK_IMPORTED_MODULE_0__.urls.backendBaseUrl).concat(_urls_urls__WEBPACK_IMPORTED_MODULE_0__.urls.messagesUrl, \"/createMessage\"), {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: \"Bearer \".concat(token)\n                },\n                body: JSON.stringify({\n                    content: message,\n                    _chatId: chatId,\n                    _userId: userId\n                })\n            });\n            const data = await response.json();\n            if (!response.ok) {\n                throw new Error(data.message || \"Failed to send message\");\n            }\n            return data;\n        } catch (error) {\n            console.error(\"Error sending message:\", error);\n        }\n    },\n    async getMessages (chatId) {\n        const token = localStorage.getItem(\"access_token\");\n        const res = await fetch(\"\".concat(_urls_urls__WEBPACK_IMPORTED_MODULE_0__.urls.backendBaseUrl).concat(_urls_urls__WEBPACK_IMPORTED_MODULE_0__.urls.messagesUrl, \"/?chatId=\").concat(chatId), {\n            headers: {\n                Authorization: \"Bearer \".concat(token)\n            }\n        });\n        const data = await res.json();\n        if (!res.ok) throw new Error(data.message || \"Server error\");\n        return Array.isArray(data) ? data : [];\n    },\n    async updateMessage (messageId, content) {\n        const token = localStorage.getItem(\"access_token\");\n        const response = await fetch(\"\".concat(_urls_urls__WEBPACK_IMPORTED_MODULE_0__.urls.backendBaseUrl).concat(_urls_urls__WEBPACK_IMPORTED_MODULE_0__.urls.messagesUrl, \"/\").concat(messageId), {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: \"Bearer \".concat(token)\n            },\n            body: JSON.stringify({\n                content\n            })\n        });\n        if (!response.ok) {\n            throw new Error(\"Failed to update message\");\n        }\n        return await response.json();\n    },\n    async deleteMessage (messageId) {\n        const token = localStorage.getItem(\"access_token\");\n        const response = await fetch(\"\".concat(_urls_urls__WEBPACK_IMPORTED_MODULE_0__.urls.backendBaseUrl).concat(_urls_urls__WEBPACK_IMPORTED_MODULE_0__.urls.messagesUrl, \"/\").concat(messageId), {\n            method: \"DELETE\",\n            headers: {\n                Authorization: \"Bearer \".concat(token)\n            }\n        });\n        if (!response.ok) {\n            throw new Error(\"Failed to delete message\");\n        }\n    },\n    async uploadFiles (chatId, messageInput, files) {\n        const token = localStorage.getItem(\"access_token\");\n        if (!chatId) throw new Error(\"ChatId is required\");\n        const userId = localStorage.getItem(\"userId\");\n        if (!userId) throw new Error(\"Користувач не авторизований\");\n        const formData = new FormData();\n        formData.append(\"_userId\", userId);\n        formData.append(\"_chatId\", chatId);\n        formData.append(\"content\", messageInput);\n        files.forEach((file)=>{\n            formData.append(\"file\", file);\n        });\n        console.log(\"Відправка повідомлення\", {\n            chatId,\n            messageInput,\n            files\n        });\n        const response = await fetch(\"\".concat(_urls_urls__WEBPACK_IMPORTED_MODULE_0__.urls.backendBaseUrl).concat(_urls_urls__WEBPACK_IMPORTED_MODULE_0__.urls.messagesUrl, \"/uploadFiles\"), {\n            method: \"POST\",\n            credentials: \"include\",\n            headers: {\n                Authorization: \"Bearer \".concat(token)\n            },\n            body: formData\n        });\n        if (!response.ok) throw new Error(\"Помилка завантаження файлів\");\n        return await response.json();\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/services/message.service.ts\n"));

/***/ })

});