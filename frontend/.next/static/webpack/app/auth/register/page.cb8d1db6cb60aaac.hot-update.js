"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/auth/register/page",{

/***/ "(app-pages-browser)/./src/services/auth.service.ts":
/*!**************************************!*\
  !*** ./src/services/auth.service.ts ***!
  \**************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authService: () => (/* binding */ authService)\n/* harmony export */ });\n/* harmony import */ var _urls_urls__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/urls/urls */ \"(app-pages-browser)/./src/urls/urls.ts\");\n\nconst authService = {\n    register: async (userData)=>{\n        const response = await fetch(\"\".concat(_urls_urls__WEBPACK_IMPORTED_MODULE_0__.urls.backendBaseUrl).concat(_urls_urls__WEBPACK_IMPORTED_MODULE_0__.urls.authRegisterUrl), {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(userData)\n        });\n        const text = await response.text();\n        if (!response.ok) {\n            throw new Error(\"Registration failed: \".concat(response.status, \" - \").concat(text));\n        }\n        return JSON.parse(text);\n    },\n    login: async (credentials)=>{\n        const response = await fetch(\"\".concat(_urls_urls__WEBPACK_IMPORTED_MODULE_0__.urls.backendBaseUrl).concat(_urls_urls__WEBPACK_IMPORTED_MODULE_0__.urls.authLoginUrl), {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                email: credentials.email,\n                password: credentials.password\n            })\n        });\n        if (!response.ok) {\n            const errorText = await response.text();\n            throw new Error(\"Login failed: \".concat(response.status, \" - \").concat(errorText));\n        }\n        const data = await response.json();\n        localStorage.setItem(\"userId\", data.user._id);\n        return data;\n    },\n    refreshToken: async ()=>{\n        const refreshToken = localStorage.getItem(\"refresh_token\");\n        try {\n            const refreshResponse = await fetch(\"\".concat(_urls_urls__WEBPACK_IMPORTED_MODULE_0__.urls.backendBaseUrl).concat(_urls_urls__WEBPACK_IMPORTED_MODULE_0__.urls.authRefreshUrl), {\n                method: \"POST\",\n                credentials: \"include\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: \"Bearer \".concat(refreshToken)\n                }\n            });\n            if (!refreshResponse.ok) {\n                throw new Error(\"Failed to refresh token\");\n            }\n            const data = await refreshResponse.json();\n            localStorage.setItem(\"access_token\", data.accessToken);\n            return data.accessToken;\n        } catch (error) {\n            console.error(\"Token update error:\", error);\n            throw error;\n        }\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9zZXJ2aWNlcy9hdXRoLnNlcnZpY2UudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFFbUM7QUFFNUIsTUFBTUMsY0FBYztJQUN2QkMsVUFBVSxPQUFPQztRQUNiLE1BQU1DLFdBQVcsTUFBTUMsTUFBTSxHQUF5QkwsT0FBdEJBLDRDQUFJQSxDQUFDTSxjQUFjLEVBQXdCLE9BQXJCTiw0Q0FBSUEsQ0FBQ08sZUFBZSxHQUFJO1lBQzFFQyxRQUFRO1lBQ1JDLFNBQVM7Z0JBQ0wsZ0JBQWdCO1lBQ3BCO1lBQ0FDLE1BQU1DLEtBQUtDLFNBQVMsQ0FBQ1Q7UUFDekI7UUFDQSxNQUFNVSxPQUFPLE1BQU1ULFNBQVNTLElBQUk7UUFDaEMsSUFBSSxDQUFDVCxTQUFTVSxFQUFFLEVBQUU7WUFDZCxNQUFNLElBQUlDLE1BQU0sd0JBQTZDRixPQUFyQlQsU0FBU1ksTUFBTSxFQUFDLE9BQVUsT0FBTEg7UUFDakU7UUFDQSxPQUFPRixLQUFLTSxLQUFLLENBQUNKO0lBQ3RCO0lBQ0FLLE9BQU8sT0FBT0M7UUFDVixNQUFNZixXQUFXLE1BQU1DLE1BQU0sR0FBeUJMLE9BQXRCQSw0Q0FBSUEsQ0FBQ00sY0FBYyxFQUFxQixPQUFsQk4sNENBQUlBLENBQUNvQixZQUFZLEdBQUk7WUFDdkVaLFFBQVE7WUFDUkMsU0FBUztnQkFDTCxnQkFBZ0I7WUFDcEI7WUFDQUMsTUFBTUMsS0FBS0MsU0FBUyxDQUFDO2dCQUNqQlMsT0FBT0YsWUFBWUUsS0FBSztnQkFDeEJDLFVBQVVILFlBQVlHLFFBQVE7WUFDbEM7UUFDSjtRQUNBLElBQUksQ0FBQ2xCLFNBQVNVLEVBQUUsRUFBRTtZQUNkLE1BQU1TLFlBQVksTUFBTW5CLFNBQVNTLElBQUk7WUFDckMsTUFBTSxJQUFJRSxNQUFNLGlCQUFzQ1EsT0FBckJuQixTQUFTWSxNQUFNLEVBQUMsT0FBZSxPQUFWTztRQUMxRDtRQUNBLE1BQU1DLE9BQU8sTUFBTXBCLFNBQVNxQixJQUFJO1FBQ2hDQyxhQUFhQyxPQUFPLENBQUMsVUFBVUgsS0FBS0ksSUFBSSxDQUFDQyxHQUFHO1FBQzVDLE9BQU9MO0lBQ1g7SUFDQ00sY0FBYztRQUNWLE1BQU1BLGVBQWVKLGFBQWFLLE9BQU8sQ0FBQztRQUMxQyxJQUFJO1lBQ0QsTUFBTUMsa0JBQWtCLE1BQU0zQixNQUFNLEdBQXlCTCxPQUF0QkEsNENBQUlBLENBQUNNLGNBQWMsRUFBdUIsT0FBcEJOLDRDQUFJQSxDQUFDaUMsY0FBYyxHQUFJO2dCQUNoRnpCLFFBQVE7Z0JBQ1JXLGFBQWE7Z0JBQ2JWLFNBQVM7b0JBQ0wsZ0JBQWdCO29CQUNoQnlCLGVBQWUsVUFBdUIsT0FBYko7Z0JBQzdCO1lBQ0o7WUFDQSxJQUFJLENBQUNFLGdCQUFnQmxCLEVBQUUsRUFBRTtnQkFDckIsTUFBTSxJQUFJQyxNQUFNO1lBQ3BCO1lBQ0EsTUFBTVMsT0FBTyxNQUFNUSxnQkFBZ0JQLElBQUk7WUFDdkNDLGFBQWFDLE9BQU8sQ0FBQyxnQkFBZ0JILEtBQUtXLFdBQVc7WUFDckQsT0FBT1gsS0FBS1csV0FBVztRQUMzQixFQUFFLE9BQU9DLE9BQU87WUFDWkMsUUFBUUQsS0FBSyxDQUFDLHVCQUF1QkE7WUFDckMsTUFBTUE7UUFDVjtJQUNIO0FBQ0wsRUFBRSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxhY2VyXFxJZGVhUHJvamVjdHNcXHRlc3QtbWVkdXp6ZW5cXGZyb250ZW5kXFxzcmNcXHNlcnZpY2VzXFxhdXRoLnNlcnZpY2UudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSVVzZXJDcmVhdGUsIElVc2VyTG9naW4sIElVc2VyUmVzcG9uc2UgfSBmcm9tIFwiQC9tb2RlbHMvSVVzZXJcIjtcclxuaW1wb3J0IHsgSVRva2VuUGFpciB9IGZyb20gXCJAL21vZGVscy9JVG9rZW5cIjtcclxuaW1wb3J0IHsgdXJscyB9IGZyb20gXCJAL3VybHMvdXJsc1wiO1xyXG5cclxuZXhwb3J0IGNvbnN0IGF1dGhTZXJ2aWNlID0ge1xyXG4gICAgcmVnaXN0ZXI6IGFzeW5jICh1c2VyRGF0YTogSVVzZXJDcmVhdGUpOiBQcm9taXNlPHsgdXNlcjogSVVzZXJSZXNwb25zZTsgdG9rZW5zOiBJVG9rZW5QYWlyIH0+ID0+IHtcclxuICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKGAke3VybHMuYmFja2VuZEJhc2VVcmx9JHt1cmxzLmF1dGhSZWdpc3RlclVybH1gLCB7XHJcbiAgICAgICAgICAgIG1ldGhvZDogXCJQT1NUXCIsXHJcbiAgICAgICAgICAgIGhlYWRlcnM6IHtcclxuICAgICAgICAgICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh1c2VyRGF0YSksXHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgY29uc3QgdGV4dCA9IGF3YWl0IHJlc3BvbnNlLnRleHQoKTtcclxuICAgICAgICBpZiAoIXJlc3BvbnNlLm9rKSB7XHJcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgUmVnaXN0cmF0aW9uIGZhaWxlZDogJHtyZXNwb25zZS5zdGF0dXN9IC0gJHt0ZXh0fWApO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gSlNPTi5wYXJzZSh0ZXh0KTtcclxuICAgIH0sXHJcbiAgICBsb2dpbjogYXN5bmMgKGNyZWRlbnRpYWxzOiBJVXNlckxvZ2luKTogUHJvbWlzZTx7IHVzZXI6IElVc2VyUmVzcG9uc2U7IHRva2VuczogSVRva2VuUGFpciB9PiA9PiB7XHJcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgJHt1cmxzLmJhY2tlbmRCYXNlVXJsfSR7dXJscy5hdXRoTG9naW5Vcmx9YCwge1xyXG4gICAgICAgICAgICBtZXRob2Q6IFwiUE9TVFwiLFxyXG4gICAgICAgICAgICBoZWFkZXJzOiB7XHJcbiAgICAgICAgICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xyXG4gICAgICAgICAgICAgICAgZW1haWw6IGNyZWRlbnRpYWxzLmVtYWlsLFxyXG4gICAgICAgICAgICAgICAgcGFzc3dvcmQ6IGNyZWRlbnRpYWxzLnBhc3N3b3JkXHJcbiAgICAgICAgICAgIH0pLFxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIGlmICghcmVzcG9uc2Uub2spIHtcclxuICAgICAgICAgICAgY29uc3QgZXJyb3JUZXh0ID0gYXdhaXQgcmVzcG9uc2UudGV4dCgpO1xyXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYExvZ2luIGZhaWxlZDogJHtyZXNwb25zZS5zdGF0dXN9IC0gJHtlcnJvclRleHR9YCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XHJcbiAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oXCJ1c2VySWRcIiwgZGF0YS51c2VyLl9pZCk7XHJcbiAgICAgICAgcmV0dXJuIGRhdGE7XHJcbiAgICB9LFxyXG4gICAgIHJlZnJlc2hUb2tlbjogYXN5bmMgKCk6IFByb21pc2U8c3RyaW5nIHwgbnVsbD4gPT4ge1xyXG4gICAgICAgICBjb25zdCByZWZyZXNoVG9rZW4gPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShcInJlZnJlc2hfdG9rZW5cIik7XHJcbiAgICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgIGNvbnN0IHJlZnJlc2hSZXNwb25zZSA9IGF3YWl0IGZldGNoKGAke3VybHMuYmFja2VuZEJhc2VVcmx9JHt1cmxzLmF1dGhSZWZyZXNoVXJsfWAsIHtcclxuICAgICAgICAgICAgICAgIG1ldGhvZDogXCJQT1NUXCIsXHJcbiAgICAgICAgICAgICAgICBjcmVkZW50aWFsczogXCJpbmNsdWRlXCIsXHJcbiAgICAgICAgICAgICAgICBoZWFkZXJzOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgQXV0aG9yaXphdGlvbjogYEJlYXJlciAke3JlZnJlc2hUb2tlbn1gLFxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgaWYgKCFyZWZyZXNoUmVzcG9uc2Uub2spIHtcclxuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkZhaWxlZCB0byByZWZyZXNoIHRva2VuXCIpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZWZyZXNoUmVzcG9uc2UuanNvbigpO1xyXG4gICAgICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShcImFjY2Vzc190b2tlblwiLCBkYXRhLmFjY2Vzc1Rva2VuKTtcclxuICAgICAgICAgICAgcmV0dXJuIGRhdGEuYWNjZXNzVG9rZW47XHJcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICAgICAgY29uc29sZS5lcnJvcihcIlRva2VuIHVwZGF0ZSBlcnJvcjpcIiwgZXJyb3IpO1xyXG4gICAgICAgICAgICB0aHJvdyBlcnJvcjtcclxuICAgICAgICB9XHJcbiAgICAgfSxcclxufTtcclxuIl0sIm5hbWVzIjpbInVybHMiLCJhdXRoU2VydmljZSIsInJlZ2lzdGVyIiwidXNlckRhdGEiLCJyZXNwb25zZSIsImZldGNoIiwiYmFja2VuZEJhc2VVcmwiLCJhdXRoUmVnaXN0ZXJVcmwiLCJtZXRob2QiLCJoZWFkZXJzIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJ0ZXh0Iiwib2siLCJFcnJvciIsInN0YXR1cyIsInBhcnNlIiwibG9naW4iLCJjcmVkZW50aWFscyIsImF1dGhMb2dpblVybCIsImVtYWlsIiwicGFzc3dvcmQiLCJlcnJvclRleHQiLCJkYXRhIiwianNvbiIsImxvY2FsU3RvcmFnZSIsInNldEl0ZW0iLCJ1c2VyIiwiX2lkIiwicmVmcmVzaFRva2VuIiwiZ2V0SXRlbSIsInJlZnJlc2hSZXNwb25zZSIsImF1dGhSZWZyZXNoVXJsIiwiQXV0aG9yaXphdGlvbiIsImFjY2Vzc1Rva2VuIiwiZXJyb3IiLCJjb25zb2xlIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/services/auth.service.ts\n"));

/***/ })

});