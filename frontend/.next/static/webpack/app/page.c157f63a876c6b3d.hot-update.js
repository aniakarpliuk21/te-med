"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/services/message.service.ts":
/*!*****************************************!*\
  !*** ./src/services/message.service.ts ***!
  \*****************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   messageService: () => (/* binding */ messageService)\n/* harmony export */ });\n/* harmony import */ var _urls_urls__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/urls/urls */ \"(app-pages-browser)/./src/urls/urls.ts\");\n\nconst messageService = {\n    async sendMessage (chatId, message) {\n        const token = localStorage.getItem(\"access_token\");\n        const userId = localStorage.getItem(\"userId\");\n        if (!token) throw new Error(\"Missing access token\");\n        if (!userId) throw new Error(\"Відсутній userId\");\n        try {\n            const response = await fetch(\"\".concat(_urls_urls__WEBPACK_IMPORTED_MODULE_0__.urls.backendBaseUrl).concat(_urls_urls__WEBPACK_IMPORTED_MODULE_0__.urls.messagesUrl, \"/createMessage\"), {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: \"Bearer \".concat(token)\n                },\n                body: JSON.stringify({\n                    content: message,\n                    _chatId: chatId,\n                    _userId: userId\n                })\n            });\n            const data = await response.json();\n            if (!response.ok) {\n                throw new Error(data.message || \"Failed to send message\");\n            }\n            return data;\n        } catch (error) {\n            console.error(\"Error sending message:\", error);\n        }\n    },\n    async getMessages (chatId) {\n        const token = localStorage.getItem(\"access_token\");\n        const res = await fetch(\"\".concat(_urls_urls__WEBPACK_IMPORTED_MODULE_0__.urls.backendBaseUrl).concat(_urls_urls__WEBPACK_IMPORTED_MODULE_0__.urls.messagesUrl, \"/?chatId=\").concat(chatId), {\n            headers: {\n                Authorization: \"Bearer \".concat(token)\n            }\n        });\n        const data = await res.json();\n        if (!res.ok) throw new Error(data.message || \"Server error\");\n        return Array.isArray(data) ? data : [];\n    },\n    async updateMessage (messageId, content) {\n        const token = localStorage.getItem(\"access_token\");\n        const response = await fetch(\"\".concat(_urls_urls__WEBPACK_IMPORTED_MODULE_0__.urls.backendBaseUrl).concat(_urls_urls__WEBPACK_IMPORTED_MODULE_0__.urls.messagesUrl, \"/\").concat(messageId), {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: \"Bearer \".concat(token)\n            },\n            body: JSON.stringify({\n                content\n            })\n        });\n        if (!response.ok) {\n            throw new Error(\"Failed to update message\");\n        }\n        return await response.json();\n    },\n    async deleteMessage (messageId) {\n        const token = localStorage.getItem(\"access_token\");\n        const response = await fetch(\"\".concat(_urls_urls__WEBPACK_IMPORTED_MODULE_0__.urls.backendBaseUrl).concat(_urls_urls__WEBPACK_IMPORTED_MODULE_0__.urls.messagesUrl, \"/\").concat(messageId), {\n            method: \"DELETE\",\n            headers: {\n                Authorization: \"Bearer \".concat(token)\n            }\n        });\n        if (!response.ok) {\n            throw new Error(\"Failed to delete message\");\n        }\n    },\n    async uploadFiles (chatId, messageInput, files) {\n        const token = localStorage.getItem(\"access_token\");\n        if (!chatId) throw new Error(\"ChatId is required\");\n        const userId = localStorage.getItem(\"userId\");\n        if (!userId) throw new Error(\"User is not authorized.\");\n        const formData = new FormData();\n        formData.append(\"_userId\", userId);\n        formData.append(\"_chatId\", chatId);\n        formData.append(\"content\", messageInput);\n        files.forEach((file)=>{\n            formData.append(\"file\", file);\n        });\n        const response = await fetch(\"\".concat(_urls_urls__WEBPACK_IMPORTED_MODULE_0__.urls.backendBaseUrl).concat(_urls_urls__WEBPACK_IMPORTED_MODULE_0__.urls.messagesUrl, \"/uploadFiles\"), {\n            method: \"POST\",\n            credentials: \"include\",\n            headers: {\n                Authorization: \"Bearer \".concat(token)\n            },\n            body: formData\n        });\n        if (!response.ok) throw new Error(\"Помилка завантаження файлів\");\n        return await response.json();\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9zZXJ2aWNlcy9tZXNzYWdlLnNlcnZpY2UudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFDaUM7QUFHMUIsTUFBTUMsaUJBQWlCO0lBQzFCLE1BQU1DLGFBQVlDLE1BQWMsRUFBQ0MsT0FBZTtRQUM1QyxNQUFNQyxRQUFRQyxhQUFhQyxPQUFPLENBQUM7UUFDbkMsTUFBTUMsU0FBU0YsYUFBYUMsT0FBTyxDQUFDO1FBQ3BDLElBQUksQ0FBQ0YsT0FBTyxNQUFNLElBQUlJLE1BQU07UUFDNUIsSUFBSSxDQUFDRCxRQUFRLE1BQU0sSUFBSUMsTUFBTTtRQUM3QixJQUFJO1lBQ0EsTUFBTUMsV0FBVyxNQUFNQyxNQUFNLEdBQXlCWCxPQUF0QkEsNENBQUlBLENBQUNZLGNBQWMsRUFBb0IsT0FBakJaLDRDQUFJQSxDQUFDYSxXQUFXLEVBQUMsbUJBQWlCO2dCQUNwRkMsUUFBUTtnQkFDUkMsU0FBUztvQkFDTCxnQkFBZ0I7b0JBQ2hCQyxlQUFlLFVBQWdCLE9BQU5YO2dCQUM3QjtnQkFDQVksTUFBTUMsS0FBS0MsU0FBUyxDQUFDO29CQUNqQkMsU0FBU2hCO29CQUNUaUIsU0FBU2xCO29CQUNUbUIsU0FBU2Q7Z0JBQU87WUFDeEI7WUFDQSxNQUFNZSxPQUFPLE1BQU1iLFNBQVNjLElBQUk7WUFDaEMsSUFBSSxDQUFDZCxTQUFTZSxFQUFFLEVBQUU7Z0JBQ2QsTUFBTSxJQUFJaEIsTUFBTWMsS0FBS25CLE9BQU8sSUFBSTtZQUNwQztZQUNBLE9BQU9tQjtRQUNYLEVBQUUsT0FBT0csT0FBTztZQUNaQyxRQUFRRCxLQUFLLENBQUMsMEJBQTBCQTtRQUM1QztJQUNKO0lBQ0EsTUFBTUUsYUFBWXpCLE1BQWM7UUFDNUIsTUFBTUUsUUFBUUMsYUFBYUMsT0FBTyxDQUFDO1FBQ25DLE1BQU1zQixNQUFNLE1BQU1sQixNQUFNLEdBQXlCWCxPQUF0QkEsNENBQUlBLENBQUNZLGNBQWMsRUFBK0JULE9BQTVCSCw0Q0FBSUEsQ0FBQ2EsV0FBVyxFQUFDLGFBQWtCLE9BQVBWLFNBQVU7WUFDbkZZLFNBQVM7Z0JBQUVDLGVBQWUsVUFBZ0IsT0FBTlg7WUFBUTtRQUNoRDtRQUNBLE1BQU1rQixPQUFPLE1BQU1NLElBQUlMLElBQUk7UUFFM0IsSUFBSSxDQUFDSyxJQUFJSixFQUFFLEVBQUUsTUFBTSxJQUFJaEIsTUFBTWMsS0FBS25CLE9BQU8sSUFBSTtRQUM3QyxPQUFPMEIsTUFBTUMsT0FBTyxDQUFDUixRQUFRQSxPQUFPLEVBQUU7SUFDMUM7SUFDQSxNQUFNUyxlQUFjQyxTQUFpQixFQUFFYixPQUFlO1FBQ2xELE1BQU1mLFFBQVFDLGFBQWFDLE9BQU8sQ0FBQztRQUNuQyxNQUFNRyxXQUFXLE1BQU1DLE1BQU0sR0FBeUJYLE9BQXRCQSw0Q0FBSUEsQ0FBQ1ksY0FBYyxFQUF1QnFCLE9BQXBCakMsNENBQUlBLENBQUNhLFdBQVcsRUFBQyxLQUFhLE9BQVZvQixZQUFhO1lBQ25GbkIsUUFBUTtZQUNSQyxTQUFTO2dCQUNMLGdCQUFnQjtnQkFDaEJDLGVBQWUsVUFBZ0IsT0FBTlg7WUFDN0I7WUFDQVksTUFBTUMsS0FBS0MsU0FBUyxDQUFDO2dCQUFDQztZQUFPO1FBQ2pDO1FBRUEsSUFBSSxDQUFDVixTQUFTZSxFQUFFLEVBQUU7WUFDZCxNQUFNLElBQUloQixNQUFNO1FBQ3BCO1FBRUEsT0FBTyxNQUFNQyxTQUFTYyxJQUFJO0lBQzlCO0lBQ0EsTUFBTVUsZUFBY0QsU0FBaUI7UUFDakMsTUFBTTVCLFFBQVFDLGFBQWFDLE9BQU8sQ0FBQztRQUNuQyxNQUFNRyxXQUFXLE1BQU1DLE1BQU0sR0FBeUJYLE9BQXRCQSw0Q0FBSUEsQ0FBQ1ksY0FBYyxFQUF1QnFCLE9BQXBCakMsNENBQUlBLENBQUNhLFdBQVcsRUFBQyxLQUFhLE9BQVZvQixZQUFhO1lBQ25GbkIsUUFBUTtZQUNSQyxTQUFTO2dCQUNMQyxlQUFlLFVBQWdCLE9BQU5YO1lBQzdCO1FBQ0o7UUFFQSxJQUFJLENBQUNLLFNBQVNlLEVBQUUsRUFBRTtZQUNkLE1BQU0sSUFBSWhCLE1BQU07UUFDcEI7SUFDSjtJQUNBLE1BQU0wQixhQUFZaEMsTUFBYyxFQUFFaUMsWUFBb0IsRUFBRUMsS0FBYTtRQUNqRSxNQUFNaEMsUUFBUUMsYUFBYUMsT0FBTyxDQUFDO1FBQ25DLElBQUksQ0FBQ0osUUFBUSxNQUFNLElBQUlNLE1BQU07UUFDN0IsTUFBTUQsU0FBU0YsYUFBYUMsT0FBTyxDQUFDO1FBQ3BDLElBQUksQ0FBQ0MsUUFBUSxNQUFNLElBQUlDLE1BQU07UUFDN0IsTUFBTTZCLFdBQVcsSUFBSUM7UUFDckJELFNBQVNFLE1BQU0sQ0FBQyxXQUFXaEM7UUFDM0I4QixTQUFTRSxNQUFNLENBQUMsV0FBV3JDO1FBQzNCbUMsU0FBU0UsTUFBTSxDQUFDLFdBQVdKO1FBQzNCQyxNQUFNSSxPQUFPLENBQUMsQ0FBQ0M7WUFDUEosU0FBU0UsTUFBTSxDQUFDLFFBQVFFO1FBQzVCO1FBRUosTUFBTWhDLFdBQVcsTUFBTUMsTUFBTSxHQUF5QlgsT0FBdEJBLDRDQUFJQSxDQUFDWSxjQUFjLEVBQW9CLE9BQWpCWiw0Q0FBSUEsQ0FBQ2EsV0FBVyxFQUFDLGlCQUFlO1lBQ2xGQyxRQUFRO1lBQ1I2QixhQUFhO1lBQ2I1QixTQUFTO2dCQUNMQyxlQUFlLFVBQWdCLE9BQU5YO1lBQzdCO1lBQ0FZLE1BQU1xQjtRQUNWO1FBQ0EsSUFBSSxDQUFDNUIsU0FBU2UsRUFBRSxFQUFFLE1BQU0sSUFBSWhCLE1BQU07UUFDbEMsT0FBTyxNQUFNQyxTQUFTYyxJQUFJO0lBQzlCO0FBRUosRUFBRSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxhY2VyXFxJZGVhUHJvamVjdHNcXHRlc3QtbWVkdXp6ZW5cXGZyb250ZW5kXFxzcmNcXHNlcnZpY2VzXFxtZXNzYWdlLnNlcnZpY2UudHMiXSwic291cmNlc0NvbnRlbnQiOlsiXHJcbmltcG9ydCB7dXJsc30gZnJvbSBcIkAvdXJscy91cmxzXCI7XHJcbmltcG9ydCB7SU1lc3NhZ2V9IGZyb20gXCJAL21vZGVscy9JTWVzc2FnZVwiO1xyXG5cclxuZXhwb3J0IGNvbnN0IG1lc3NhZ2VTZXJ2aWNlID0ge1xyXG4gICAgYXN5bmMgc2VuZE1lc3NhZ2UoY2hhdElkOiBzdHJpbmcsbWVzc2FnZTogc3RyaW5nLCkge1xyXG4gICAgICAgIGNvbnN0IHRva2VuID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJhY2Nlc3NfdG9rZW5cIik7XHJcbiAgICAgICAgY29uc3QgdXNlcklkID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJ1c2VySWRcIik7XHJcbiAgICAgICAgaWYgKCF0b2tlbikgdGhyb3cgbmV3IEVycm9yKFwiTWlzc2luZyBhY2Nlc3MgdG9rZW5cIik7XHJcbiAgICAgICAgaWYgKCF1c2VySWQpIHRocm93IG5ldyBFcnJvcihcItCS0ZbQtNGB0YPRgtC90ZbQuSB1c2VySWRcIik7XHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgJHt1cmxzLmJhY2tlbmRCYXNlVXJsfSR7dXJscy5tZXNzYWdlc1VybH0vY3JlYXRlTWVzc2FnZWAsIHtcclxuICAgICAgICAgICAgICAgIG1ldGhvZDogXCJQT1NUXCIsXHJcbiAgICAgICAgICAgICAgICBoZWFkZXJzOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgQXV0aG9yaXphdGlvbjogYEJlYXJlciAke3Rva2VufWAsXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnRlbnQ6IG1lc3NhZ2UsXHJcbiAgICAgICAgICAgICAgICAgICAgX2NoYXRJZDogY2hhdElkLFxyXG4gICAgICAgICAgICAgICAgICAgIF91c2VySWQ6IHVzZXJJZCx9KSxcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XHJcbiAgICAgICAgICAgIGlmICghcmVzcG9uc2Uub2spIHtcclxuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihkYXRhLm1lc3NhZ2UgfHwgXCJGYWlsZWQgdG8gc2VuZCBtZXNzYWdlXCIpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJldHVybiBkYXRhO1xyXG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciBzZW5kaW5nIG1lc3NhZ2U6XCIsIGVycm9yKTtcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgYXN5bmMgZ2V0TWVzc2FnZXMoY2hhdElkOiBzdHJpbmcpIHtcclxuICAgICAgICBjb25zdCB0b2tlbiA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKFwiYWNjZXNzX3Rva2VuXCIpO1xyXG4gICAgICAgIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKGAke3VybHMuYmFja2VuZEJhc2VVcmx9JHt1cmxzLm1lc3NhZ2VzVXJsfS8/Y2hhdElkPSR7Y2hhdElkfWAsIHtcclxuICAgICAgICAgICAgaGVhZGVyczogeyBBdXRob3JpemF0aW9uOiBgQmVhcmVyICR7dG9rZW59YCB9LFxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXMuanNvbigpO1xyXG5cclxuICAgICAgICBpZiAoIXJlcy5vaykgdGhyb3cgbmV3IEVycm9yKGRhdGEubWVzc2FnZSB8fCBcIlNlcnZlciBlcnJvclwiKTtcclxuICAgICAgICByZXR1cm4gQXJyYXkuaXNBcnJheShkYXRhKSA/IGRhdGEgOiBbXTtcclxuICAgIH0sXHJcbiAgICBhc3luYyB1cGRhdGVNZXNzYWdlKG1lc3NhZ2VJZDogc3RyaW5nLCBjb250ZW50OiBzdHJpbmcsKTogUHJvbWlzZTxJTWVzc2FnZT4ge1xyXG4gICAgICAgIGNvbnN0IHRva2VuID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJhY2Nlc3NfdG9rZW5cIik7XHJcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgJHt1cmxzLmJhY2tlbmRCYXNlVXJsfSR7dXJscy5tZXNzYWdlc1VybH0vJHttZXNzYWdlSWR9YCwge1xyXG4gICAgICAgICAgICBtZXRob2Q6IFwiUFVUXCIsXHJcbiAgICAgICAgICAgIGhlYWRlcnM6IHtcclxuICAgICAgICAgICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxyXG4gICAgICAgICAgICAgICAgQXV0aG9yaXphdGlvbjogYEJlYXJlciAke3Rva2VufWAsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtjb250ZW50fSksXHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIGlmICghcmVzcG9uc2Uub2spIHtcclxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiRmFpbGVkIHRvIHVwZGF0ZSBtZXNzYWdlXCIpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcmV0dXJuIGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcclxuICAgIH0sXHJcbiAgICBhc3luYyBkZWxldGVNZXNzYWdlKG1lc3NhZ2VJZDogc3RyaW5nKSB7XHJcbiAgICAgICAgY29uc3QgdG9rZW4gPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShcImFjY2Vzc190b2tlblwiKTtcclxuICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKGAke3VybHMuYmFja2VuZEJhc2VVcmx9JHt1cmxzLm1lc3NhZ2VzVXJsfS8ke21lc3NhZ2VJZH1gLCB7XHJcbiAgICAgICAgICAgIG1ldGhvZDogXCJERUxFVEVcIixcclxuICAgICAgICAgICAgaGVhZGVyczoge1xyXG4gICAgICAgICAgICAgICAgQXV0aG9yaXphdGlvbjogYEJlYXJlciAke3Rva2VufWAsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIGlmICghcmVzcG9uc2Uub2spIHtcclxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiRmFpbGVkIHRvIGRlbGV0ZSBtZXNzYWdlXCIpO1xyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbiAgICBhc3luYyB1cGxvYWRGaWxlcyhjaGF0SWQ6IHN0cmluZywgbWVzc2FnZUlucHV0OiBzdHJpbmcsIGZpbGVzOiBGaWxlW10pIHtcclxuICAgICAgICBjb25zdCB0b2tlbiA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKFwiYWNjZXNzX3Rva2VuXCIpO1xyXG4gICAgICAgIGlmICghY2hhdElkKSB0aHJvdyBuZXcgRXJyb3IoXCJDaGF0SWQgaXMgcmVxdWlyZWRcIik7XHJcbiAgICAgICAgY29uc3QgdXNlcklkID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJ1c2VySWRcIik7XHJcbiAgICAgICAgaWYgKCF1c2VySWQpIHRocm93IG5ldyBFcnJvcihcIlVzZXIgaXMgbm90IGF1dGhvcml6ZWQuXCIpO1xyXG4gICAgICAgIGNvbnN0IGZvcm1EYXRhID0gbmV3IEZvcm1EYXRhKCk7XHJcbiAgICAgICAgZm9ybURhdGEuYXBwZW5kKFwiX3VzZXJJZFwiLCB1c2VySWQpO1xyXG4gICAgICAgIGZvcm1EYXRhLmFwcGVuZChcIl9jaGF0SWRcIiwgY2hhdElkKTtcclxuICAgICAgICBmb3JtRGF0YS5hcHBlbmQoXCJjb250ZW50XCIsIG1lc3NhZ2VJbnB1dCk7XHJcbiAgICAgICAgZmlsZXMuZm9yRWFjaCgoZmlsZSkgPT4ge1xyXG4gICAgICAgICAgICAgICAgZm9ybURhdGEuYXBwZW5kKFwiZmlsZVwiLCBmaWxlKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICk7XHJcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgJHt1cmxzLmJhY2tlbmRCYXNlVXJsfSR7dXJscy5tZXNzYWdlc1VybH0vdXBsb2FkRmlsZXNgLCB7XHJcbiAgICAgICAgICAgIG1ldGhvZDogXCJQT1NUXCIsXHJcbiAgICAgICAgICAgIGNyZWRlbnRpYWxzOiBcImluY2x1ZGVcIixcclxuICAgICAgICAgICAgaGVhZGVyczoge1xyXG4gICAgICAgICAgICAgICAgQXV0aG9yaXphdGlvbjogYEJlYXJlciAke3Rva2VufWAsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIGJvZHk6IGZvcm1EYXRhLFxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIGlmICghcmVzcG9uc2Uub2spIHRocm93IG5ldyBFcnJvcihcItCf0L7QvNC40LvQutCwINC30LDQstCw0L3RgtCw0LbQtdC90L3RjyDRhNCw0LnQu9GW0LJcIik7XHJcbiAgICAgICAgcmV0dXJuIGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcclxuICAgIH1cclxuXHJcbn07XHJcblxyXG5cclxuIl0sIm5hbWVzIjpbInVybHMiLCJtZXNzYWdlU2VydmljZSIsInNlbmRNZXNzYWdlIiwiY2hhdElkIiwibWVzc2FnZSIsInRva2VuIiwibG9jYWxTdG9yYWdlIiwiZ2V0SXRlbSIsInVzZXJJZCIsIkVycm9yIiwicmVzcG9uc2UiLCJmZXRjaCIsImJhY2tlbmRCYXNlVXJsIiwibWVzc2FnZXNVcmwiLCJtZXRob2QiLCJoZWFkZXJzIiwiQXV0aG9yaXphdGlvbiIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwiY29udGVudCIsIl9jaGF0SWQiLCJfdXNlcklkIiwiZGF0YSIsImpzb24iLCJvayIsImVycm9yIiwiY29uc29sZSIsImdldE1lc3NhZ2VzIiwicmVzIiwiQXJyYXkiLCJpc0FycmF5IiwidXBkYXRlTWVzc2FnZSIsIm1lc3NhZ2VJZCIsImRlbGV0ZU1lc3NhZ2UiLCJ1cGxvYWRGaWxlcyIsIm1lc3NhZ2VJbnB1dCIsImZpbGVzIiwiZm9ybURhdGEiLCJGb3JtRGF0YSIsImFwcGVuZCIsImZvckVhY2giLCJmaWxlIiwiY3JlZGVudGlhbHMiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/services/message.service.ts\n"));

/***/ })

});